@using System.Globalization;
@model IEnumerable<DBMProject.Models.ProjectsManagement.Projeto>

@{
    ViewData["Title"] = "Mapa de Projetos";
}




<div id="map" style="width:100%;height:700px;"></div>

<div id="legenda">
    Sectores de Actividade :
    Automóvel - <img src="~/images/marker_carro.png" style="width:20px;" />
    Turismo - <img src="~/images/marker_turismo.png" style="width:20px;" />
    Portuário - <img src="~/images/marker_barco.png" style="width:20px;" />
    Video Jogos - <img src="~/images/marker_video.png" style="width:20px;" />
    Outros - <img src="~/images/marker_outros.png" style="width:20px;" />
</div>

<script type="text/javascript">
    function initMap() {
        console.log("google maps");
        // Create a map object and specify the DOM element for display.
        var map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 38.5345, lng: -8.86582 },
            zoom: 2,


            styles: [
                { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
                {
                    featureType: 'administrative.locality',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi',
                    stylers: [{
                        "visibility": "off",

                    }]
                },

                {
                    featureType: 'road',
                    stylers: [{
                        "visibility": "off"

                    }]
                },



                {
                    featureType: 'transit',
                    stylers: [{
                        "visibility": "off"

                    }]
                },

                {
                    featureType: 'water',
                    elementType: 'geometry',
                    stylers: [{ color: '#17263c' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#515c6d' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.stroke',
                    stylers: [{ color: '#17263c' }]
                }
            ]






        });

        //var myLatLng = { lat: -25.363, lng: 131.044 };
        //var marker = new google.maps.Marker({
        //    position: myLatLng,
        //    map: map,
        //    title: 'Hello World!'
        //});



       @{

           //double lat1 = 0.0;
           //double longit = 0.0;
           //for (var i = 0; i < (ViewData["latitudes"] as IList<double>).Count ; i++) {

           //    lat1 = (ViewData["latitudes"] as IList<double>)[i];

           //    for (var j = 0; j < (ViewData["longitudes"] as IList<double>).Count  ; j++) {

           //        longit = (ViewData["longitudes"] as IList<double>)[j];
           //    }



           var min = .999599;
           var max = 1.000501;
           double lat1 = 0.0;
           double longit = 0.0;
           for (var i = 0; i < (ViewData["latitudes"] as IList<double>).Count; i++)
           {



               Random r = new Random();
               var r1 = r.NextDouble() * (max - min) + min;
               var r2 = r.NextDouble() * (max - min) + min;




               lat1 = (ViewData["latitudes"] as IList<double>)[i] * r1;
               longit = (ViewData["longitudes"] as IList<double>)[i] * r2;

               var nome = @Model.ElementAt(i).ProjectName;
               var idProj = @Model.ElementAt(i).ProjetoId;
               var sectorProj = @Model.ElementAt(i).Sector;


                   <text>


        var imageBarco = {
            url: '../images/marker_barco.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(50, 65),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(25, 65)
        };
        var shapeBarco = {
            coords: [1, 1, 1, 64, 49, 64, 64, 1],
            type: 'poly'
        };

        var imageCarro = {
            url: '../images/marker_carro.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(50, 65),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(25, 65)
        };
        var shapeCarro = {
            coords: [1, 1, 1, 64, 49, 64, 64, 1],
            type: 'poly'
        };

        var imageJogo = {
            url: '../images/marker_video.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(50, 65),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(25, 65)
        };
        var shapeJogo = {
            coords: [1, 1, 1, 64, 49, 64, 64, 1],
            type: 'poly'
        };

        var imageTurismo = {
            url: '../images/marker_turismo.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(50, 65),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(25, 65)
        };
        var shapeTurismo = {
            coords: [1, 1, 1, 64, 49, 64, 64, 1],
            type: 'poly'
        };

        var imageOutros = {
            url: '../images/marker_outros.png',
            // This marker is 20 pixels wide by 32 pixels high.
            size: new google.maps.Size(50, 65),
            // The origin for this image is (0, 0).
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at (0, 32).
            anchor: new google.maps.Point(25, 65)
        };
        var shapeOutros = {
            coords: [1, 1, 1, 64, 49, 64, 64, 1],
            type: 'poly'
        };


        var myLatLng = new google.maps.LatLng( @lat1.ToString(CultureInfo.CreateSpecificCulture("en-GB")) , @longit.ToString(CultureInfo.CreateSpecificCulture("en-GB")) );

        var marker = new google.maps.Marker({
            position: myLatLng,
            animation: google.maps.Animation.DROP,
            label: { text: '@nome ', color: "white" },

                   @{
                       if (sectorProj == "Industria automovel")
                       {
                           <text>icon: imageCarro,
                                shape: shapeCarro,
                            </text>
                       }
                       else if (sectorProj == "Industria Turismo")
                       {
                           <text>icon: imageTurismo,
                            shape: shapeTurismo,
                            </text>
                       }
                       else if (sectorProj == "Industria portuaria")
                       {
                           <text>icon: imageBarco,
                            shape: shapeBarco,
                            </text>
                       }
                       else if (sectorProj == "Industria Video Jogos")
                       {
                           <text>icon: imageJogo,
                                shape: shapeJogo,
                            </text>
                       }

                       else
                       {
                           <text>icon: imageOutros,
                            shape: shapeOutros,
                            </text>
                       }


                   }



                   @*url: @Html.ActionLink("Link text", "Details", "Projetos", new { id= Model.ElementAt(i).ProjetoId }, null) ,*@
                            url: 'https://it4u.azurewebsites.net//Projetos/Details/@idProj ' ,
                      map: map


            });
               marker.setMap(map);
               google.maps.event.addListener(marker, 'click', function () {
                   window.location.href = this.url;
               });
         </text>
           }

       }

        @*@{
            for (int i = 0; i < (ViewData["latitudes"] as IList<double>).Count; i++)
            {

            }
        }*@



    }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyABDW2KCUC3slQCnSRjSf5PVKB0HSHNmqc&callback=initMap" async defer></script>





@*<ul>
        @foreach (var lat in ViewData["latitudes"] as IList<double>)
        {
            <li>
                @lat
            </li>
        }
    </ul>
    <ul>
        @foreach (var longi in ViewData["longitudes"] as IList<double>)
        {
            <li>
                @longi
            </li>
        }
    </ul>*@











@*<div id="map-holder">

        http://dev.virtualearth.net/REST/v1/Locations?clocality=Setubal

        <script type="text/javascript">

            console.log("hello");


            var width = 900;
            var height = 600;



            var projection = d3.geo.mercator();

            var svg = d3.select("map-holder").append("svg")
                .attr("width", width)
                .attr("height", height);
            var path = d3.geo.path()
                .projection(projection);
            var g = svg.append("g");

            d3.json("world-110m2.json", function (error, topology) {
                g.selectAll("path")
                    .data(topojson.feature(topology, topology.objects.countries)
                        .geometries)
                    .enter()
                    .append("path")
                    .attr("d", path)
            });



        </script>


    </div>*@



